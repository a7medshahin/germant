/*Now the CSS*/

.treeDiv {
    margin: 0 auto;
    text-align: center;
    width: max-content;
    display: table;
}

.tree ul {
    padding-top: 20px;
    position: relative;
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

.tree li {
    float: left;
    text-align: center;
    list-style-type: none;
    position: relative;
    padding: 20px 5px 0 5px;
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}


/*We will use ::before and ::after to draw the connectors*/

.tree li::before,
.tree li::after {
    content: '';
    position: absolute;
    top: 0;
    right: 50%;
    border-top: 1px solid #ccc;
    width: 50%;
    height: 20px;
}

.tree li::after {
    right: auto;
    left: 50%;
    border-left: 1px solid #ccc;
}


/*We need to remove left-right connectors from elements without 
any siblings*/

.tree li:only-child::after,
.tree li:only-child::before {
    display: none;
}


/*Remove space from the top of single children*/

.tree li:only-child {
    padding-top: 0;
}


/*Remove left connector from first child and 
right connector from last child*/

.tree li:first-child::before,
.tree li:last-child::after {
    border: 0 none;
}


/*Adding back the vertical connector to the last nodes*/

.tree li:last-child::before {
    border-right: 1px solid #ccc;
    border-radius: 0 5px 0 0;
    -webkit-border-radius: 0 5px 0 0;
    -moz-border-radius: 0 5px 0 0;
}

.tree li:first-child::after {
    border-radius: 5px 0 0 0;
    -webkit-border-radius: 5px 0 0 0;
    -moz-border-radius: 5px 0 0 0;
}


/*Time to add downward connectors from parents*/

.tree ul ul::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    border-left: 1px solid #ccc;
    width: 0;
    height: 20px;
}

.tree li>a {
    border: 1px solid #fff;
    padding: 5px 10px;
    text-decoration: none;
    color: #666;
    font-family: arial, verdana, tahoma;
    font-size: 18px;
    display: inline-block;
    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}


/*Time for some hover effects*/


/*We will apply the hover effect the the lineage of the element also*/

.tree li a:hover,
.tree li a:hover+ul li a {
    background: #c8e4f8;
    color: #000;
    border: 1px solid #94a0b4;
}


/*Connector styles on hover*/

.tree li a:hover+ul li::after,
.tree li a:hover+ul li::before,
.tree li a:hover+ul::before,
.tree li a:hover+ul ul::before {
    border-color: #94a0b4;
}

.mat-card-avatar {
    background-color: #ccc;
}

.mat-card-subtitle {
    text-align: left;
}

.status-img {
    width: 36px;
    height: 36px;
    float: right;
}

.awesome-modal {
    display: none;
    background-color: #fff;
    box-shadow: 0 0 26px 0 rgba(0, 0, 0, 0.2);
    border-radius: 4px;
    padding: 1rem;
    width: 450px;
    max-width: 80%;
    position: fixed;
    top: 50%;
    left: 50%;
    -webkit-transform: translate3d(-50%, -50%, 0);
    transform: translate3d(-50%, -50%, 0);
    overflow: hidden;
    z-index: 999;
    -webkit-animation: bounce .4s ease forwards;
    animation: bounce .4s ease forwards;
}

.awesome-modal * {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.awesome-overlay {
    display: none;
    background-color: rgba(0, 0, 0, 0.6);
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 998;
    overflow: hidden;
    cursor: default;
}

.close-icon {
    position: absolute;
    width: 1rem;
    height: 1rem;
    top: .7rem;
    right: .7rem;
    transition: opacity .2s ease;
}

.close-icon::before,
.close-icon::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: inherit;
    height: 2px;
    background-color: #999;
}

.close-icon::before {
    -webkit-transform: translate(-50%, -50%) rotate(45deg);
    transform: translate(-50%, -50%) rotate(45deg);
}

.close-icon::after {
    -webkit-transform: translate(-50%, -50%) rotate(135deg);
    transform: translate(-50%, -50%) rotate(135deg);
}

.modal-title {
    margin-top: 0;
}

:target {
    display: block;
}

:target~.awesome-overlay {
    display: block;
}

@-webkit-keyframes bounce {
    0% {
        -webkit-transform: translate3d(-50%, -50%, 0) scale(0.7);
        transform: translate3d(-50%, -50%, 0) scale(0.7);
    }
    45% {
        -webkit-transform: translate3d(-50%, -50%, 0) scale(1.05);
        transform: translate3d(-50%, -50%, 0) scale(1.05);
    }
    80% {
        -webkit-transform: translate3d(-50%, -50%, 0) scale(0.95);
        transform: translate3d(-50%, -50%, 0) scale(0.95);
    }
    100% {
        -webkit-transform: translate3d(-50%, -50%, 0) scale(1);
        transform: translate3d(-50%, -50%, 0) scale(1);
    }
}

@keyframes bounce {
    0% {
        -webkit-transform: translate3d(-50%, -50%, 0) scale(0.7);
        transform: translate3d(-50%, -50%, 0) scale(0.7);
    }
    45% {
        -webkit-transform: translate3d(-50%, -50%, 0) scale(1.05);
        transform: translate3d(-50%, -50%, 0) scale(1.05);
    }
    80% {
        -webkit-transform: translate3d(-50%, -50%, 0) scale(0.95);
        transform: translate3d(-50%, -50%, 0) scale(0.95);
    }
    100% {
        -webkit-transform: translate3d(-50%, -50%, 0) scale(1);
        transform: translate3d(-50%, -50%, 0) scale(1);
    }
}

#close {
    position: fixed;
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
}